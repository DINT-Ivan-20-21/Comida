<Window x:Class="Comida.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Comida"
        mc:Ignorable="d"
        Icon="assets/fruit_food_apple.ico"
        Title="Comida"
        Height="700"
        Width="950"
        Background="LightSkyBlue">
    <Window.Resources>

        <!-- Objetos -->
        <local:VisibilityConverter x:Key="visibilityConverter" />

        <!-- Estilos -->

        <!-- Image -->
        <Style TargetType="Image"
               x:Key="Icono">
            <Setter Property="Height"
                    Value="30" />
        </Style>

        <!-- CheckBox-->
        <Style TargetType="CheckBox">
            <Setter Property="Margin"
                    Value="5" />
        </Style>

        <!-- TextBlock-->
        <Style TargetType="TextBlock">
            <Setter Property="Margin"
                    Value="10,15,10,0" />
        </Style>

        <!-- TextBox-->
        <Style TargetType="TextBox">
            <Setter Property="Margin"
                    Value="10,0,10,0" />
            <Setter Property="TextWrapping"
                    Value="Wrap" />
        </Style>

        <!-- Triggers -->
        <Style TargetType="Image"
               x:Key="BanderaIcono"
               BasedOn="{StaticResource Icono}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Tipo}"
                             Value="China">
                    <Setter Property="Source"
                            Value="assets/china.png" />
                    <Setter Property="ToolTip"
                            Value="Comida china" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Tipo}"
                             Value="Americana">
                    <Setter Property="Source"
                            Value="assets/united_states.png" />
                    <Setter Property="ToolTip"
                            Value="Comida americana" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Tipo}"
                             Value="Mexicana">
                    <Setter Property="Source"
                            Value="assets/mexico.png" />
                    <Setter Property="ToolTip"
                            Value="Comida mexicana" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="TextBlock"
               x:Key="Titulo">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Tipo}"
                             Value="China">
                    <Setter Property="FontFamily"
                            Value="Chinese Wok Food St" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Tipo}"
                             Value="Americana">
                    <Setter Property="FontFamily"
                            Value="Slim Summer" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Tipo}"
                             Value="Mexicana">
                    <Setter Property="FontFamily"
                            Value="Taco Salad" />
                </DataTrigger>
            </Style.Triggers>
            <Setter Property="Text"
                    Value="{Binding Nombre}" />
            <Setter Property="HorizontalAlignment"
                    Value="Center" />
        </Style>

        <!-- Plantillas-->
        <DataTemplate x:Key="comida">
            <Border Width="240"
                    Height="275"
                    Margin="10"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Background="AliceBlue">
                <Border.Effect>
                    <DropShadowEffect />
                </Border.Effect>
                <DockPanel Margin="5">
                    <Viewbox DockPanel.Dock="Top"
                             MaxHeight="50">
                        <TextBlock Style="{StaticResource Titulo}" />
                    </Viewbox>
                    <DockPanel DockPanel.Dock="Bottom"
                               LastChildFill="False"
                               Margin="10,0">
                        <Image Style="{StaticResource BanderaIcono}" />
                        <StackPanel DockPanel.Dock="Right"
                                    Orientation="Horizontal">
                            <Image Style="{StaticResource Icono}"
                                   Source="assets/gluten.png"
                                   Visibility="{Binding Gluten, Converter={StaticResource visibilityConverter}}" />
                            <Image Style="{StaticResource Icono}"
                                   Source="assets/milk.png"
                                   Visibility="{Binding Leche, Converter={StaticResource visibilityConverter}}" />
                            <Image Style="{StaticResource Icono}"
                                   Source="assets/sulfide.png"
                                   Visibility="{Binding Sulfitos, Converter={StaticResource visibilityConverter}}" />
                            <Image Style="{StaticResource Icono}"
                                   Source="assets/soybean.png"
                                   Visibility="{Binding Soja, Converter={StaticResource visibilityConverter}}" />
                        </StackPanel>
                    </DockPanel>
                    <Image Source="{Binding Imagen}"
                           Stretch="Fill"
                           Margin="10" />
                </DockPanel>
            </Border>
        </DataTemplate>

        <ControlTemplate x:Key="MiTextBox"
                         TargetType="{x:Type TextBox}">
            <Border x:Name="border"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="2"
                    Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">
                <ScrollViewer x:Name="PART_ContentHost"
                              Focusable="False"
                              HorizontalScrollBarVisibility="Hidden"
                              VerticalScrollBarVisibility="Hidden"
                              Margin="3" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Opacity"
                            TargetName="border"
                            Value="0.56" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="BorderBrush"
                            TargetName="border"
                            Value="#FF7EB4EA" />
                </Trigger>
                <Trigger Property="IsKeyboardFocused"
                         Value="True">
                    <Setter Property="BorderBrush"
                            TargetName="border"
                            Value="#FF56C875" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="MiGroupBox"
                         TargetType="{x:Type GroupBox}">
            <Grid SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="6" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="6" />
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="6" />
                </Grid.RowDefinitions>
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Grid.ColumnSpan="4"
                        Grid.Row="1"
                        Grid.RowSpan="3">
                    <Border.OpacityMask>
                        <MultiBinding ConverterParameter="7"
                                      UpdateSourceTrigger="Default">
                            <MultiBinding.Converter>
                                <BorderGapMaskConverter />
                            </MultiBinding.Converter>
                            <Binding ElementName="Header"
                                     Path="ActualWidth" />
                            <Binding Path="ActualWidth"
                                     RelativeSource="{RelativeSource Self}" />
                            <Binding Path="ActualHeight"
                                     RelativeSource="{RelativeSource Self}" />
                        </MultiBinding>
                    </Border.OpacityMask>
                </Border>
                <Border x:Name="Header"
                        Grid.Column="1"
                        Padding="3,1,3,0"
                        Grid.Row="0"
                        Grid.RowSpan="2">
                    <ContentPresenter ContentTemplate="{TemplateBinding HeaderTemplate}"
                                      Content="{TemplateBinding Header}"
                                      ContentStringFormat="{TemplateBinding HeaderStringFormat}"
                                      ContentSource="Header"
                                      RecognizesAccessKey="True"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Border>
                <ContentPresenter Grid.ColumnSpan="2"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  Grid.Column="1"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  Margin="{TemplateBinding Padding}"
                                  Grid.Row="2"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="MiCheckBox"
                         TargetType="{x:Type CheckBox}">
            <Grid x:Name="templateRoot"
                  Background="Transparent"
                  SnapsToDevicePixels="True">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border x:Name="checkBoxBorder"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        Margin="1"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                    <Grid x:Name="markGrid">
                        <Path x:Name="optionMark"
                              Data="F1M9.97498,1.22334L4.6983,9.09834 4.52164,9.09834 0,5.19331 1.27664,3.52165 4.255,6.08833 8.33331,1.52588E-05 9.97498,1.22334z"
                              Fill="#FF212121"
                              Margin="2"
                              Opacity="0"
                              Stretch="None" />
                        <Rectangle x:Name="indeterminateMark"
                                   Fill="#FF212121"
                                   Margin="2"
                                   Opacity="0" />
                    </Grid>
                </Border>
                <ContentPresenter x:Name="contentPresenter"
                                  ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  Grid.Column="1"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                  Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasContent"
                         Value="True">
                    <Setter Property="FocusVisualStyle">
                        <Setter.Value>
                            <Style>
                                <Setter Property="Control.Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Rectangle Margin="14,0,0,0"
                                                       SnapsToDevicePixels="True"
                                                       Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                                       StrokeThickness="1"
                                                       StrokeDashArray="1 2" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Padding"
                            Value="4,-1,0,0" />
                </Trigger>
                <Trigger Property="IsMouseOver"
                         Value="True">
                    <Setter Property="Background"
                            TargetName="checkBoxBorder"
                            Value="#FFF3F9FF" />
                    <Setter Property="BorderBrush"
                            TargetName="checkBoxBorder"
                            Value="#FF5593FF" />
                    <Setter Property="Fill"
                            TargetName="optionMark"
                            Value="#FF212121" />
                    <Setter Property="Fill"
                            TargetName="indeterminateMark"
                            Value="#FF212121" />
                </Trigger>
                <Trigger Property="IsEnabled"
                         Value="False">
                    <Setter Property="Background"
                            TargetName="checkBoxBorder"
                            Value="#FFE6E6E6" />
                    <Setter Property="BorderBrush"
                            TargetName="checkBoxBorder"
                            Value="#FFBCBCBC" />
                    <Setter Property="Fill"
                            TargetName="optionMark"
                            Value="#FF707070" />
                    <Setter Property="Fill"
                            TargetName="indeterminateMark"
                            Value="#FF707070" />
                </Trigger>
                <Trigger Property="IsPressed"
                         Value="True">
                    <Setter Property="Background"
                            TargetName="checkBoxBorder"
                            Value="#FFD9ECFF" />
                    <Setter Property="BorderBrush"
                            TargetName="checkBoxBorder"
                            Value="#FF3C77DD" />
                    <Setter Property="Fill"
                            TargetName="optionMark"
                            Value="#FF212121" />
                    <Setter Property="Fill"
                            TargetName="indeterminateMark"
                            Value="#FF212121" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="True">
                    <Setter Property="Opacity"
                            TargetName="optionMark"
                            Value="1" />
                    <Setter Property="Opacity"
                            TargetName="indeterminateMark"
                            Value="0" />
                </Trigger>
                <Trigger Property="IsChecked"
                         Value="{x:Null}">
                    <Setter Property="Opacity"
                            TargetName="optionMark"
                            Value="0" />
                    <Setter Property="Opacity"
                            TargetName="indeterminateMark"
                            Value="1" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

    </Window.Resources>
    <Border  Margin="10"
             Background="White"
             BorderBrush="Black"
             BorderThickness="1">
        <DockPanel>
            <StackPanel DockPanel.Dock="Right"
                        Width="275"
                        Background="Gainsboro"
                        Margin="5,10,15,10"
                        DataContext="{Binding ElementName=PlatoListBox, Path=SelectedItem}">
                <TextBlock Text="Nombre del plato" />
                <TextBox Text="{Binding Path=Nombre, UpdateSourceTrigger=PropertyChanged}"
                         Template="{DynamicResource MiTextBox}" />
                <TextBlock Text="Foto del plato" />
                <TextBox Text="{Binding Path=Imagen}"
                         Template="{DynamicResource MiTextBox}" />
                <TextBlock Text="Tipo de comida" />
                <ComboBox x:Name="TipoComboBox"
                          SelectedItem="{Binding Path=Tipo}"
                          Margin="10,0,10,15" />
                <GroupBox Header="Alérgenos"
                          BorderBrush="Black"
                          Margin="10,0,10,0"
                          Template="{DynamicResource MiGroupBox}">
                    <UniformGrid Rows="2"
                                 Columns="2">
                        <CheckBox Content="Leche"
                                  IsChecked="{Binding Path=Leche}"
                                  Template="{DynamicResource MiCheckBox}" />
                        <CheckBox Content="Soja"
                                  IsChecked="{Binding Path=Soja}"
                                  Template="{DynamicResource MiCheckBox}" />
                        <CheckBox Content="Gluten"
                                  IsChecked="{Binding Path=Gluten}"
                                  Template="{DynamicResource MiCheckBox}" />
                        <CheckBox Content="Sulfitos"
                                  IsChecked="{Binding Path=Sulfitos}"
                                  Template="{DynamicResource MiCheckBox}" />
                    </UniformGrid>
                </GroupBox>
            </StackPanel>
            <ListBox x:Name="PlatoListBox"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ItemTemplate="{StaticResource comida}"
                     Margin="10">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel />
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
        </DockPanel>
    </Border>

</Window>
